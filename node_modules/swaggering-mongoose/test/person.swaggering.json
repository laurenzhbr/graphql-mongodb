{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Persons",
    "contact": {
      "name": "Vyacheslav Chub",
      "email": "vyacheslav.chub@gmail.com"
    },
    "license": {
      "name": "The MIT License (MIT)",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "basePath": "/api",
  "schemes": [
    "http"
  ],
  "paths": {
    "/persons": {
      "get": {
        "tags": [
          "Person Operations"
        ],
        "summary": "finds persons in the system",
        "responses": {
          "200": {
            "description": "person response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Person"
              }
            },
            "headers": {
              "x-expires": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "House": {
      "required": [
        "lng",
        "lat"
      ],
      "properties": {
        "description": {
          "type": "string"
        },
        "lng": {
          "type": "double"
        },
        "lat": {
          "type": "double"
        }
      }
    },
    "Car": {
      "required": [
        "provider",
        "model"
      ],
      "properties": {
        "provider": {
          "type": "string"
        },
        "model": {
          "type": "string"
        }
      }
    },
    "Person": {
      "required": [
        "login",
        "nestedRequiredObject"
      ],
      "properties": {
        "_id": {
          "type": "string"
        },
        "login": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "nestedRequiredObject": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string"
            },
            "value": {
              "type": "string"
            }
          }
        },
        "password": {
          "type": "password",
          "x-swaggering-mongoose": {
            "select": false,
            "required": true
          }
        },
        "houses": {
          "type": "array",
          "items": {
            "x-swaggering-mongoose": {
              "type": "ObjectId"
            },
            "$ref": "#/definitions/House"
          }
        },
        "cars": {
          "type": "array",
          "items": {
            "type": "string",
            "x-swaggering-mongoose": {
              "type": "ObjectId",
              "ref": "Car"
            }
          }
        },
        "contacts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Contact"
          }
        },
        "other": {
          "type": "array",
          "items": {
            "type": "object",
            "x-swaggering-mongoose": {
              "type": "Mixed"
            }            
          }
        }
      }
    },
    "Contact": {
      "type": "object",
      "required": [
        "contactID",
        "priority"
      ],
      "properties": {
        "contactID": {
          "type": "string",
          "x-swaggering-mongoose": {
            "type": "ObjectId"
          }
        },
        "priority": {
          "type": "string",
          "default": "high"
        }
      }
    },
    "Human": {
      "properties": {
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "father": {
          "$ref": "#/definitions/Human"
        },
        "mother": {
          "$ref": "#/definitions/Human"
        }
      }
    },
    "Error": {
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        }
      }
    }
  }
}
